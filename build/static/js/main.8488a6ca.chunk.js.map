{"version":3,"sources":["components/Layout/Column/index.js","components/Layout/Container/index.js","components/Layout/Row/index.js","components/Atoms/A/index.js","components/Atoms/Div/index.js","components/Atoms/Divider/index.js","global/constants/cssVariables.js","components/Atoms/Button/index.js","components/Atoms/H1/index.js","components/Atoms/H2/index.js","components/Atoms/H3/index.js","components/Atoms/H4/index.js","components/Atoms/H5/index.js","components/Atoms/H6/index.js","components/Atoms/Label/index.js","components/Atoms/Li/index.js","components/Atoms/Ol/index.js","components/Atoms/P/index.js","components/Atoms/Span/index.js","components/Atoms/Ul/index.js","components/Atoms/index.js","components/Organisms/TaskList/index.js","components/Templates/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","props","mobile","tablet","desktop","Root","fullSize","Container","children","Row","a","A","Div","DivComp","Divider","primary","secondary","accent","white","black","text","grey","colors","CONSTANTS","StyledButton","button","Circle","span","Arrow","Text","Button","role","aria-pressed","aria-expanded","className","h1","H1","h2","H2","h3","H3","h4","H4","h5","H5","h6","H6","label","Label","li","Li","ol","Ol","p","P","Span","ul","propertyNames","forEach","elem","name","toLowerCase","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","border","padding","boxShadow","formControl","margin","TaskList","classes","useState","priority","setPriority","error","setError","task","setTask","tasks","setTasks","React","modalState","setModalState","title","field","columns","useEffect","data","JSON","parse","window","sessionStorage","getItem","setItem","stringify","handleOnClose","handleError","onClick","divider","editable","onRowUpdate","newTask","oldTask","Promise","resolve","setTimeout","updatedTask","map","item","handleUpdateTask","onRowDelete","filter","Modal","open","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","FormControl","InputLabel","htmlFor","Input","id","value","onChange","e","target","style","marginTop","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","color","labelPlacement","handleSubmit","S","Home","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8488a6ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Root = styled.div`\r\n    display: inline-block;\r\n\r\n    /* Smartphones (portrait) ----------- */\r\n    @media only screen and (max-width : 320px) {\r\n    /* Styles */\r\n        width: ${props => props.mobile > 4 ? '100%' : (props.mobile / 4) * 100}%;\r\n        display: ${props => props.mobile <= 0 ? 'none' : 'inline-block' };\r\n    }\r\n\r\n   /* Smartphones (portrait and landscape) ----------- */\r\n    @media only screen and (min-width : 320px) and (max-width : 767px) {\r\n    /* Styles */\r\n        width: ${props => props.mobile > 4 ? '100%' : (props.mobile / 4) * 100}%;\r\n        display: ${props => props.mobile <= 0 ? 'none' : 'inline-block' };\r\n    }\r\n\r\n    /* iPads (portrait and landscape) ----------- */\r\n    @media only screen and (min-width : 768px) and (max-width : 1223px) {\r\n    /* Styles */\r\n        width: ${props => props.tablet > 8 ? '100%' : (props.tablet / 8) * 100}%;\r\n        display: ${props => props.tablet <= 0 ? 'none' : 'inline-block' };\r\n    }\r\n\r\n    /* Desktops and laptops ----------- */\r\n    @media only screen  and (min-width : 1224px) {\r\n    /* Styles */\r\n        width: ${props => props.desktop > 12 ? '100%' : (props.desktop / 12) * 100}%;\r\n        display: ${props => props.desktop <= 0 ? 'none' : 'inline-block' };\r\n\r\n    }\r\n`\r\n\r\nconst Column = ({ \r\n    mobile = 0,\r\n    tablet = 0,\r\n    desktop = 0,\r\n    children }) => {\r\n    return (\r\n        <Root\r\n            mobile={mobile}\r\n            tablet={tablet}\r\n            desktop={desktop}\r\n        >{children}</Root>\r\n    )\r\n}\r\n\r\nexport default Column;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n    margin: ${props => props.fullSize ? 0: '10px'};\r\n    height: '100%';\r\n`;\r\n\r\nconst Container = ({ fullSize, children }) => (\r\n    <Root fullSize={fullSize}>{children}</Root>\r\n)\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nconst Row = ({ children }) => (\r\n    <Root>{children}</Root>\r\n)\r\n\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.a``;\r\n\r\n/**\r\n * Returns the <a> element (or anchor element).\r\n * The HTML <a> element (or anchor element), with its href attribute, \r\n * creates a hyperlink to web pages, files, email addresses, \r\n * locations in the same page, or anything else a URL can address.\r\n * @param {*} props Props to be passed to the <a> element (or anchor element) \r\n */\r\nconst A = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default A\r\nexport {\r\n    A\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.div``;\r\n/**\r\n * Returns a <div> element.\r\n * The HTML <div> element is the generic container for flow content. \r\n * It has no effect on the content or layout until styled using CSS.\r\n * @param {*} props Props to be passed to the <div> element\r\n */\r\nconst Div = props => {\r\n  return (\r\n    <Root {...props}>\r\n      {props.children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Div;\r\nexport {\r\n  Div\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport DivComp from '@material-ui/core/Divider'\r\n\r\n\r\nconst Root = styled(DivComp)``;\r\n/**\r\n * Returns a <divider> element.\r\n * The HTML <divider> element \r\n * --- \r\n * PLEASE \r\n * FILL \r\n * IN \r\n * DETAILS\r\n * ---\r\n * @param {*} props Props to be passed to the <divider> element\r\n */\r\nconst Divider = props => {\r\n  return (\r\n    <Root {...props}>\r\n      {props.children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Divider;\r\nexport {\r\n  Divider\r\n}","export default {\r\n    colors: {\r\n        primary: '#DEA441',\r\n        secondary: '#9BC1F2',\r\n        accent: '#24354F',\r\n        white: '#FFFFFF',\r\n        black: '#000000',\r\n        text: '#24354F',\r\n        grey: '#282936'\r\n    }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst transition = () => `all 0.45s cubic-bezier(0.65, 0, .076, 1)`;\r\n\r\nconst Root = styled.div`\r\n  display: inline;\r\n  margin-right: 1rem;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 0;\r\n  vertical-align: middle;\r\n  text-decoration: none;\r\n  background: transparent;\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  font-family: 'Mukta', sans-serif;\r\n  width: 12rem;\r\n  height: auto;\r\n\r\n  &:hover {\r\n    .circle {\r\n      width: 100%;\r\n    }\r\n    .arrow {\r\n      background: ${colors.white};\r\n      transform: translate(1rem, 0);\r\n    }\r\n    .text {\r\n      color: ${colors.white};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Circle = styled.span`\r\n  transition: ${transition()};\r\n  position: relative;\r\n  display: block;\r\n  margin: 0;\r\n  width: 3rem;\r\n  height: 3rem;\r\n  background: ${colors.grey};\r\n  border-radius: 1.625rem;\r\n`;\r\n\r\nconst Arrow = styled.span`\r\n  transition: ${transition()};\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: auto;\r\n  background: none;\r\n  left: 0.625rem;\r\n  width: 1.125rem;\r\n  height: 0.125rem;\r\n\r\n  &::before {\r\n    position: absolute;\r\n    content: '';\r\n    top: -0.31rem;\r\n    right: 0.0625rem;\r\n    width: 0.625rem;\r\n    height: 0.625rem;\r\n    border-top: 0.125rem solid ${colors.white};\r\n    border-right: 0.125rem solid ${colors.white};\r\n    transform: rotate(45deg);\r\n  }\r\n`;\r\n\r\nconst Text = styled.span`\r\n  transition: ${transition()};\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  padding: 0.75rem 0;\r\n  margin: 0 0 0 1.85rem;\r\n  color: ${colors.grey};\r\n  font-weight: 700;\r\n  line-height: 1.6;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  width: 12rem;\r\n`;\r\n\r\n\r\n/**\r\n * Returns a <button> element.\r\n * The HTML <button> element represents a clickable button,\r\n * which can be used in forms or anywhere in a document \r\n * that needs simple, standard button functionality.\r\n * @param {*} props Props to be passed to the <Button> element\r\n */\r\n \r\nconst Button = props => {\r\n  // const { children, onClick } = props\r\n  return (\r\n    <Root>\r\n      <StyledButton {...props} role=\"button\" aria-pressed=\"false\" aria-expanded=\"false\">\r\n        <Circle className=\"circle\">\r\n          <Arrow className=\"arrow\" />\r\n          <Text className=\"text\" >{props.children}</Text>\r\n        </Circle>\r\n      </StyledButton>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Button;\r\nexport {\r\n  Button\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.h1`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <h1> element.\r\n * The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest.\r\n * @param {*} props Props to be passed to the <h1> element \r\n */\r\nconst H1 = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default H1\r\nexport {\r\n    H1\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.h2`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <h2> element.\r\n * The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest.\r\n * @param {*} props Props to be passed to the <h2> element \r\n */\r\nconst H2 = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default H2\r\nexport {\r\n    H2\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\n\r\nconst Root = styled.h3`\r\n    color: ${colors.grey}\r\n`;\r\n\r\n/**\r\n * Returns the <h3> element.\r\n * The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest.\r\n * @param {*} props Props to be passed to the <h3> element \r\n */\r\nconst H3 = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default H3\r\nexport {\r\n    H3\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.h4`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <h4> element.\r\n * The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest.\r\n * @param {*} props Props to be passed to the <h4> element \r\n */\r\nconst H4 = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default H4\r\nexport {\r\n    H4\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.h5`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <h5> element.\r\n * The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest.\r\n * @param {*} props Props to be passed to the <h5> element \r\n */\r\nconst H5 = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default H5\r\nexport {\r\n    H5\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.h6`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <h6> element.\r\n * The HTML <h1>–<h6> elements represent six levels of section headings. <h1> is the highest section level and <h6> is the lowest.\r\n * @param {*} props Props to be passed to the <h6> element \r\n */\r\nconst H6 = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default H6\r\nexport {\r\n    H6\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.label``;\r\n\r\n/**\r\n * Returns the <label> element.\r\n * The HTML <label> element represents a caption for an item in a user interface.\r\n * @param {*} props Props to be passed to the <label> element \r\n */\r\nconst Label = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default Label\r\nexport {\r\n    Label\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.li``;\r\n\r\n/**\r\n * Returns the <li> element.\r\n * The HTML <li> element is used to represent an item in a list.\r\n * @param {*} props Props to be passed to the <li> element \r\n */\r\nconst Li = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default Li\r\nexport {\r\n    Li\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.ol``;\r\n\r\n/**\r\n * Returns the <ol> element.\r\n * The HTML <ol> element represents an ordered list of items — typically rendered as a numbered list.\r\n * @param {*} props Props to be passed to the <ol> element \r\n */\r\nconst Ol = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default Ol\r\nexport {\r\n    Ol\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.p`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <p> element.\r\n * The HTML <p> element represents a paragraph.\r\n * @param {*} props Props to be passed to the <p> element \r\n */\r\nconst P = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default P\r\nexport {\r\n    P\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CONSTANTS from '../../../global/constants/cssVariables';\r\n\r\nconst { colors } = CONSTANTS;\r\n\r\nconst Root = styled.span`\r\n  color: ${colors.grey};\r\n`;\r\n\r\n/**\r\n * Returns the <span> element.\r\n * The HTML <span> element is a generic inline container for phrasing content, which does not inherently represent anything. \r\n * It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang.\r\n * @param {*} props Props to be passed to the <span> element \r\n */\r\nconst Span = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default Span\r\nexport {\r\n    Span\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Root = styled.ul`\r\n    list-style-type: none;\r\n`;\r\n\r\n/**\r\n * Returns the <ul> element.\r\n * The HTML <ul> element represents an unordered list of items, typically rendered as a bulleted list.\r\n * @param {*} props Props to be passed to the <ul> element \r\n */\r\nconst Ul = (props) => <Root {...props}>{props.children}</Root>\r\n\r\nexport default Ul\r\nexport {\r\n    Ul\r\n}\r\n","import A from './A';\r\nimport Div from './Div'\r\nimport Divider from './Divider'\r\nimport Button from './Button';\r\nimport H1 from './H1';\r\nimport H2 from './H2';\r\nimport H3 from './H3';\r\nimport H4 from './H4';\r\nimport H5 from './H5';\r\nimport H6 from './H6';\r\nimport Label from './Label';\r\nimport Li from './Li';\r\nimport Ol from './Ol';\r\nimport P from './P';\r\nimport Span from './Span';\r\nimport Ul from './Ul';\r\n\r\nconst propertyNames = {};\r\nconst elements = [\r\n    A,\r\n    Button,\r\n    Div,\r\n    Divider,\r\n    H1,\r\n    H2,\r\n    H3,\r\n    H4,\r\n    H5,\r\n    H6,\r\n    Label,\r\n    Li,\r\n    Ol,\r\n    P,\r\n    Span,\r\n    Ul\r\n];\r\n\r\nelements.forEach(elem => {\r\n    propertyNames[elem.name.toLowerCase()] = elem;\r\n})\r\n\r\nexport default propertyNames;\r\nexport {\r\n    A,\r\n    Button,\r\n    Div,\r\n    Divider,\r\n    H1,\r\n    H2,\r\n    H3,\r\n    H4,\r\n    H5,\r\n    H6,\r\n    Label,\r\n    Li,\r\n    Ol,\r\n    P,\r\n    Span,\r\n    Ul\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport S from '../../Atoms';\r\nimport { Container, Row } from '../../Layout';\r\nimport MaterialTable from 'material-table';\r\nimport { FormLabel } from '@material-ui/core';\r\nimport CONSTANTS from '../../../global/constants/cssVariables'\r\n\r\nconst { colors } = CONSTANTS;\r\nconst Root = styled.div``;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  paper: {\r\n    backgroundColor: colors.white,\r\n    border: `2px solid ${colors.black}`,\r\n    padding: '1rem 2rem 1.5rem',\r\n    boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12)'\r\n  },\r\n  formControl: {\r\n    margin: '1em'\r\n  }\r\n}));\r\n\r\n/**\r\n * Returns a <TaskList> organism element.\r\n * Conatains the task list component and the associated functionality.\r\n * @param {*} props Props to be passed to the <TaskList> element\r\n */\r\nconst TaskList = props => {\r\n  const classes = useStyles();\r\n\r\n  // Application State\r\n  const [priority, setPriority] = useState('1 - Low')\r\n  const [error, setError] = useState(false);\r\n  const [task, setTask] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [modalState, setModalState] = React.useState(false);\r\n  const [columns] = useState([\r\n    { title: 'Task', field: 'task'},\r\n    { title: 'Priority', field: 'priority'},\r\n  ]);\r\n\r\n  // Side Effects\r\n  useEffect(() => {\r\n    const data = JSON.parse(window.sessionStorage.getItem('taskList')) || [];\r\n    setTasks(data);\r\n  }, [setTasks])\r\n\r\n  useEffect(() => {\r\n    window.sessionStorage.setItem('taskList', JSON.stringify(tasks));\r\n  }, [tasks])\r\n\r\n  // Methods\r\n  const handleOpen = () => setModalState(true);\r\n\r\n  const handleOnClose = () => setModalState(false);\r\n\r\n  const handleError = task => setError(task ? false : true);\r\n\r\n  const handlePriority = e => setPriority(e.target.value);\r\n\r\n  const handleSubmit = ({ task, priority}) => {\r\n    handleError(task);\r\n    if (task) {\r\n      setTasks([...tasks, { task, priority}])\r\n      handleOnClose();\r\n    }\r\n  }\r\n  \r\n  const handleChange = e => {\r\n    handleError(e.target.value)\r\n    setTask(e.target.value);\r\n  }\r\n\r\n  const handleUpdateTask = (task, updatedTask) => {\r\n    setTasks(tasks.map(item => item === task ? updatedTask : item));\r\n  }\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Root {...props}>\r\n          <S.button onClick={handleOpen}>Add Task</S.button>\r\n        </Root>\r\n      </Container>\r\n      <S.divider />\r\n      <Container>\r\n        <S.h1>Tasks List</S.h1>\r\n        <MaterialTable \r\n          title=\"\"\r\n          columns={columns}\r\n          data={tasks}\r\n          editable={{\r\n            onRowUpdate: (newTask, oldTask) =>\r\n              new Promise(resolve => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                  handleUpdateTask(oldTask, newTask)\r\n                }, 600);\r\n              }),\r\n            onRowDelete: data =>\r\n              new Promise(resolve => {\r\n                setTimeout(() => {\r\n                  resolve();\r\n                    setTasks(tasks.filter(task => task !== data));\r\n                  }, 600);\r\n              }),\r\n            }}\r\n        />\r\n      </Container>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={modalState}\r\n        onClose={handleOnClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{ timeout: 500 }}\r\n      >\r\n        <Fade in={modalState}>\r\n          <S.div className={classes.paper}>\r\n            <S.h3>Add a task</S.h3>\r\n            <Row>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"task-name\">Name</InputLabel>\r\n                <Input id=\"task-name\" value={task} onChange={handleChange} error={error} />\r\n              </FormControl>\r\n            </Row>\r\n            <Row style={{marginTop: '1em'}}>\r\n              <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                <FormLabel component=\"legend\" name=\"legend\">Priority</FormLabel>\r\n                <RadioGroup name=\"priority\" value={priority} onChange={handlePriority}>\r\n                <FormControlLabel\r\n                  value=\"3 - High\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"High\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"2 - Medium\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Medium\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"1 - Low\"\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"Low\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Row>\r\n            <Container>\r\n              <S.button onClick={() => handleSubmit({ task, priority })}>Submit Task</S.button>\r\n            </Container>\r\n          </S.div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\nexport {\r\n  TaskList\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport S from '../../Atoms';\r\nimport TaskList from '../../Organisms/TaskList';\r\nimport Container from '../../Layout/Container';\r\n\r\nconst Root = styled(S.div)`\r\n  button[title=\"add\"] {\r\n    display: none;\r\n  }\r\n`;\r\n/**\r\n * Returns a <Home> template element.\r\n * Serves as the home page for the application\r\n * @param {*} props Props to be passed to the <Home> element\r\n */\r\nconst Home = props => {\r\n  return (\r\n    <Root {...props}>\r\n      <Container>\r\n        <TaskList />\r\n      </Container>\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Home;\r\nexport {\r\n  Home\r\n}","import React from 'react';\nimport { Container } from './components/Layout';\nimport Home from './components/Templates/Home';\n\nfunction App() {\n  return (\n    <Container fullSize>\n      <Home />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}